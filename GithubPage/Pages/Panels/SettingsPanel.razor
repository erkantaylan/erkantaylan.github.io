@using Microsoft.FluentUI.AspNetCore.Components.Extensions
@using Microsoft.FluentUI.AspNetCore.Components.Icons.Filled
@implements IDialogContentComponent

<FluentMessageBarProvider
    Section="@App.MessagesDialog"
    MaxMessageCount="1"/>

<FluentDesignTheme
    @bind-Mode="@Mode"
    @bind-OfficeColor="@OfficeColor"
    StorageName="theme"/>

<FluentDialogBody>

    <div style="min-height: 250px;">
        <FluentGrid>
            <FluentGridItem>
                <FluentSelect Label="Theme"
                              Width="250px"
                              Items="@(Enum.GetValues<DesignThemeModes>())"
                              @bind-SelectedOption="@Mode"/>
            </FluentGridItem>

            <FluentGridItem>
                <FluentSelect Label="Color"
                              Items="@(Enum.GetValues<OfficeColor>().Select(i => (OfficeColor?)i))"
                              Height="200px"
                              Width="250px"
                              @bind-SelectedOption="@OfficeColor">
                    <OptionTemplate>
                        <FluentStack>
                            <FluentIcon Value="@(new Size20.RectangleLandscape())"
                                        Color="Color.Custom"
                                        CustomColor="@(context.ToAttributeValue() != "default" ? context.ToAttributeValue() : "#036ac4")"/>
                            <FluentLabel>@context</FluentLabel>
                        </FluentStack>
                    </OptionTemplate>
                </FluentSelect>
            </FluentGridItem>
        </FluentGrid>
    </div>
</FluentDialogBody>

@code
{
    public DesignThemeModes Mode { get; set; }

    public OfficeColor? OfficeColor { get; set; }

}